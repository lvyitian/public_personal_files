#快速排序程序实现

#初始化栈寄存器
0x09 0x13 9 4   #mov R67 0x0409
0x08 0x48       #mov ST R67

#main
#初始化数据:2 7 4 8 9 3 0 5 2
0x50 2          #push 2
0x50 5          #push 5
0x50 0          #push 0
0x50 3          #push 3
0x50 9          #push 9
0x50 8          #push 8
0x50 4          #push 4
0x50 7          #push 7
0x50 2          #push 2
0x08 0x46       #mov SB ST
#参数传入(a,b,e)
0x08 0x42       #mov R67 ST
0x09 0x07       #mov R23 R67
0x08 0x50 8     #mov R0 8
0x08 0xD0 0xFB 0xFF
#mov [R23-5] R0
0x09 0x10 0x00 0x04
#mov R01 0x0400
0x08 0xD1 0xF9 0xFF
#mov [R23-7] R1
0x08 0xD0 0xF8 0xFF
#mov [R23-8] R0

#调用sort函数
#call sort
0x50 0          #push 0
0x50 stop       #push stop
#jmp sort
0x28 sort 0     #jmp sort

label stop
0x20 0          #jmp $
#完成排序 0 2 2 3 4 5 7 8 9

#sort(a,b,e)
label sort
#init
0x08 0x41       #mov R67 SB
0x4F            #push R7
0x4E            #push R6
0x08 0x46       #mov SB ST
#start

#变量地址初始化
0x08 0x41       #mov R67 SB
0x09 0x07       #mov R23 R67
#end变量
0x08 0xF0 0xFF 0xFF
#mov R0 [R23-1]
#begin变量
0x08 0xF1 0xFE 0xFF
#mov R1 [R23-2]
#if(begin>=end) return;
0x18 0x08       #cmp R1 R0
0x2E 0x67 1     #jge return
#int i=begin;
0x08 0xD1 0xFB 0xFF
#mov [R23-5] R1
#int j=i+1;
0x10 0x51 1     #add R1 1
0x08 0xD1 0xFA 0xFF
#mov [R23-6] R1

label sw
#j变量
0x08 0xF0 0xFA 0xFF
#mov R0 [R23-6]
#end变量
0x08 0xF1 0xFF 0xFF
#mov R1 [R23-1]
#if(j>end)
0x18 0x01       #cmp R0 R1
0x2D swe 0      #jg swe

#begin
0x08 0xF1 0xFE 0xFF
#mov R1 [R23-2]
#a地址计算
0x08 0xF6 0xFC 0xFF
#mov R6 [R23-4]
0x08 0xF7 0xFD 0xFF
#mov R7 [R23-3]
0x09 0x07       #mov R23 R67
#a[begin] -> R4
0x10 0x89       #add R23 R1
0x08 0xB4       #mov R4 [R23]
0x11 0x89       #sub R23 R1
#a[j]     -> R5
0x10 0x88       #add R23 R0
0x08 0xB5       #mov R5 [R23]

#if(a[begin]<=a[j])skip;
0x18 0x25       #cmp R4 R5
0x2C ss 0       #jle ss
#恢复到变量地址
0x08 0x41       #mov R67 SB
0x09 0x07       #mov R23 R67
#i变量
0x08 0xF1 0xFB 0xFF
#mov R1 [R23-5]
0x10 0x51 1     #add R1 1
0x08 0xD1 0xFB 0xFF
#mov [R23-5] R1
#a地址计算
0x08 0xF6 0xFC 0xFF
#mov R6 [R23-4]
0x08 0xF7 0xFD 0xFF
#mov R7 [R23-3]
0x09 0x07       #mov R23 R67
#a[i] -> R4
0x10 0x89       #add R23 R1
0x08 0xB4       #mov R4 [R23]
0x11 0x89       #sub R23 R1
#swap(a[i],[j])
0x08 0x34       #mov R6 R4
0x08 0x25       #mov R4 R5
0x08 0x2E       #mov R5 R6
0x10 0x89       #add R23 R1
0x08 0x94       #mov [R23] R4
0x11 0x89       #sub R23 R1
0x10 0x88       #add R23 R0
0x08 0x95       #mov [R23] R5
0x11 0x88       #sub R23 R0
label ss
#恢复到变量地址
0x08 0x41       #mov R67 SB
0x09 0x07       #mov R23 R67
0x10 0x50 1     #add R0 1
0x08 0xD0 0xFA 0xFF
#mov [R23-6] R0
0x28 sw 0       #jmp sw
label swe
#i变量
0x08 0xF0 0xFB 0xFF
#mov R0 [R23-5]
#begin变量
0x08 0xF1 0xFE 0xFF
#mov R1 [R23-2]
#a地址计算
0x08 0xF6 0xFC 0xFF
#mov R6 [R23-4]
0x08 0xF7 0xFD 0xFF
#mov R7 [R23-3]
0x09 0x07       #mov R23 R67
#a[begin] -> R4
0x10 0x89       #add R23 R1
0x08 0xB4       #mov R4 [R23]
0x11 0x89       #sub R23 R1
#a[i]     -> R5
0x10 0x88       #add R23 R0
0x08 0xB5       #mov R5 [R23]
0x11 0x88       #sub R23 R0
#swap(a[i],a[begin])
0x08 0x34       #mov R6 R4
0x08 0x25       #mov R4 R5
0x08 0x2E       #mov R5 R6
0x10 0x89       #add R23 R1
0x08 0x94       #mov [R23] R4
0x11 0x89       #sub R23 R1
0x10 0x88       #add R23 R0
0x08 0x95       #mov [R23] R5
0x11 0x88       #sub R23 R0

#恢复到变量地址
0x08 0x41       #mov R67 SB
0x09 0x07       #mov R23 R67

#a地址读取
0x08 0xF0 0xFC 0xFF
#mov R0 [R23-4]
0x08 0xF1 0xFD 0xFF
#mov R1 [R23-3]
#begin
0x08 0xF4 0xFE 0xFF
#mov R4 [R23-2]
#i
0x08 0xF5 0xFB 0xFF
#mov R5 [R23-5]
0x11 0x55 1     #sub R5 1

#传入参数
0x11 0x59 11    #sub R23 11
0x08 0x95       #mov [R23] R5
0x11 0x59 1     #sub R23 1
0x08 0x94       #mov [R23] R4
0x11 0x59 1     #sub R23 1
0x08 0x91       #mov [R23] R1
0x11 0x59 1     #sub R23 1
0x08 0x90       #mov [R23] R0

0x08 0x41       #mov R67 SB
0x11 0x5B 6     #sub R67 6
0x08 0x48       #mov ST R67

#调用sort函数
#call sort
#push sn0
0x50 1
0x50 0x2E
#jmp sort
0x28 sort 0     #jmp sort

#恢复到变量地址
0x08 0x41       #mov R67 SB
0x09 0x07       #mov R23 R67

#a地址读取
0x08 0xF0 0xFC 0xFF
#mov R0 [R23-4]
0x08 0xF1 0xFD 0xFF
#mov R1 [R23-3]
#i
0x08 0xF4 0xFB 0xFF
#mov R4 [R23-5]
#end
0x08 0xF5 0xFF 0xFF
#mov R5 [R23-1]
0x10 0x54 1     #add R4 1

#传入参数
0x11 0x59 11    #sub R23 11
0x08 0x95       #mov [R23] R5
0x11 0x59 1     #sub R23 1
0x08 0x94       #mov [R23] R4
0x11 0x59 1     #sub R23 1
0x08 0x91       #mov [R23] R1
0x11 0x59 1     #sub R23 1
0x08 0x90       #mov [R23] R0

0x08 0x41       #mov R67 SB
0x11 0x5B 6     #sub R67 6
0x08 0x48       #mov ST R67

#调用sort函数
#call sort
#push sn0
0x50 1
0x50 0x67
#jmp sort
0x28 sort 0     #jmp sort

#ret
0x08 0x49       #mov ST SB
0x5E            #pop R6
0x5F            #pop R7
0x08 0x44       #mov SB R67
0x5C            #pop R4
0x5D            #pop R5
0x40            #jmp R45
